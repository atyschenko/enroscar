buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.7'
  }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'nexus'

version = '1.0-SNAPSHOT'
group = 'com.stanfy.enroscar'

repositories {
  mavenCentral()
  maven {
    url "file://${System.env['ANDROID_HOME']}/extras/android/m2repository/"
  }
  maven {
    url 'https://oss.sonatype.org/content/repositories/snapshots'
  }
}

dependencies {
  compile project(path: ':content', configuration: 'plain')
  compile 'com.squareup:javawriter:2.4.0'

  testCompile 'junit:junit:4.11'
  testCompile 'org.easytesting:fest-assert-core:2.0M10'
  testCompile 'com.google.testing.compile:compile-testing:0.4'
  testCompile 'com.google.guava:guava:15.0'
  testCompile 'org.truth0:truth:0.13'

  testCompile group: 'org.robolectric', name: 'robolectric', version: '2.3-SNAPSHOT'
  testRuntime files("${System.properties['java.home']}/../lib/tools.jar")
  testRuntime files("${System.env['ANDROID_HOME']}/platforms/android-19/android.jar")
}

tasks.withType(Test) {
  scanForTestClasses = false
  include "**/*Test.class"
}

task debug << {
  configurations.testRuntime.each { println it }
}

def cleanupPom = { pom ->
  pom.dependencies.removeAll { it.groupId == project.group }
}

install.repositories.mavenInstaller.pom.whenConfigured(cleanupPom)
uploadArchives.repositories {
  mavenDeployer {
    pom.whenConfigured(cleanupPom)
  }
}
