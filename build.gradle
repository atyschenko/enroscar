buildscript {
  repositories {
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:0.9.2'
    classpath 'com.squareup.gradle:gradle-android-test-plugin:0.9.1-SNAPSHOT'
  }
}

def getPackageName = { "com.stanfy.enroscar.${it.name.replaceAll(/\W/, '').replaceAll(/enroscar/, '')}" }
def projectVersion = "2.0-SNAPSHOT"

task wrapper(type: Wrapper) {
  gradleVersion = '1.9'
}


def checkstyleDir = new File(rootDir, 'config/checkstyle')
def checkstyleConfig = new File(checkstyleDir, 'checkstyle.xml')

def libraryModules = [
    'beans', 'content', 'assist', 'goro', 'images', 'io', 'net', 'stats', 'ui', 'async-rx'
    //'sherlock-integration'
].collect { project(":$it") }

configure(libraryModules) {

  version = projectVersion
  group = 'com.stanfy.enroscar'

  apply plugin: 'android-library'
  apply from: file("$rootDir/gradle/tests.gradle")
  apply from: file("$rootDir/gradle/publish.gradle")
  //apply plugin: 'checkstyle'

//  checkstyle {
//    configFile = checkstyleConfig
//    configProperties['basedir'] = project.projectDir
//  }

  archivesBaseName = "enroscar-${project.name}"

  repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
  }

  android {
    compileSdkVersion 19

    buildToolsVersion '19.0.3'

    defaultConfig {
      versionCode 10
      versionName projectVersion
      minSdkVersion 8
      packageName getPackageName(project)
    }

    compileOptions {
      sourceCompatibility JavaVersion.VERSION_1_7
      targetCompatibility JavaVersion.VERSION_1_7
    }

  }

  def testDeps = [
      'com.squareup:fest-android:1.0.+',
      'com.google.mockwebserver:mockwebserver:20130706',
      'org.easytesting:fest-reflect:1.4.1',
      'org.mockito:mockito-all:1.9.5'
  ]

  dependencies {
    // TODO: it should be removed, but current version of 'android-test' plugin does not treat aar dependencies appropriately
    testCompile fileTree(dir: "$buildDir/exploded-bundles", include: "*/classes.jar")
    testCompile fileTree(dir: "$buildDir/exploded-bundles", include: "*/libs/*.jar")


    testDeps.each {
      testCompile it
      androidTestCompile it
    }

    testCompile group: 'org.robolectric', name: 'robolectric', version: '2.3-SNAPSHOT'
    testCompile group: 'junit', name: 'junit', version: '4.11'
    testCompile 'org.easytesting:fest-util:1.2.5'
  }

  project.ext.dependOnProjects = { list ->
    project.dependencies {
      list.each {
        compile project(it)
        testCompile project(path : it, configuration : 'testCompile')
      }
    }
  }

  android {
    if (project.hasProperty('preDex')) {
      dexOptions {
        preDexLibraries = Boolean.valueOf("$project.preDex")
      }
    }
  }

}
